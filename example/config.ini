; 配置示例
; 注: 命令中直接输入的选项优先级高于配置文件
;     布尔型的设置仅当为true时才为真
; 支持环境变量 如下面配置中的 DEST

; 通用配置节点
; [job]节点使用其值作为默认值
[config]
; gfwlist获取相关设置

; 完全禁止使用gfwlist 默认 false
; gfwlist-disabled = false

; gfwlist文件网址，留空使用默认，值为`-`则表示不在线获取
gfwlist-url = https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt

; 获取gfwlist时的代理
; 默认: 空
; gfwlist-proxy = SOCKS5://127.0.0.1:9527

; gfwlist本地文件，在线地址获取失败时读取本地
; 默认: -
gfwlist-local = ${DEST}/gfwlist-local.txt

; 更新本地gfwlist文件
; 当成功获取在线的gfwlist文件并且gfwlist-local存在，是否更新gfwlist-local
; 默认: false
gfwlist-update-local = true

; 保存解码后的gfwlist文件 用于开发测试
; 默认: 空
gfwlist-decoded-save = ${DEST}/gfwlist-decoded.txt

; etag缓存加速 默认: false
etag-cache = true

; 用户自定义规则相关

; 规则，支持使用`,`或换行分割多个规则
; urer-rule = RULE1,RULE2,RULE3
;   RULE4
;   RULE5
;   RULE6

; 规则文件，可使用`,`或换行分割多个文件
; user-rule-from = /PATH/TO/USER/RULE/FILE_1,/PATH/TO/USER/RULE/FILE_2
;   /PATH/TO/USER/RULE/FILE_3
;   /PATH/TO/USER/RULE/FILE_4

; 默认输出格式，当下面的format节点没有指定格式时使用该值，最好不要在[config]中设置
; format = pac

; 输出文件 该值为空或`-`则输出到stdout
; output = -


; 格式定义, 可重复, 所有选项可使用, 优先级高于[config]节点
; 支持[job]及[job:FORMAT]形式
; 每个节点表示一个任务, 因而多次使用可生成多个文件
; 注意节点中的FORMAT优先级高于config节点的format值但低于本节点的format值，如:
;
; [config]
; format = fmt1
; [job:fmt2]
; format = fmt3
;
; job:fmt2节点中选项format的值为 fmt3
;! 建议不要在节点名和选项中重复指定FMT

; 目前支持格式的具体配置
; ===
; pac: 代理自动配置文件
[job:pac]
; PAC文件中的代理 必须 默认: 空
; 注: 如果配置的是多条可选项，最好使用引号包围，如下面的例子
pac-proxy = "SOCKS5 127.0.0.1:1080; DIRECT"
; 压缩，默认 false
; pac-compress = false
; 精确匹配 默认 false
; pac-precise = false
output = ${DEST}/pac.js

; 相同的格式可重复出现
[job:pac]
; 配置可重复出现，优先级高于[config]节点下的值
gfwlist-url = https://raw.githubusercontent.com/gfwlist/tinylist/master/tinylist.txt
gfwlist-local = ${DEST}/tinylist-local.txt
gfwlist-update-local = true
gfwlist-decoded-save = ${DEST}/tinylist-decoded.txt
pac-proxy = "SOCKS5 127.0.0.1:1080; DIRECT"
output = ${DEST}/pac-tiny.conf

; list: 规则列表
; 与GFWLIST相似的base64编码
[job:list]
output = ${DEST}/list.txt

; 明文，不进行base64编码
[job:list]
list-raw = true
output = ${DEST}/list-raw.txt

; dnsmasq: DNSmasq的DNS服务器、ipset、nftset
[job:dnsmasq]
; 解析规则的域名使用的dns服务器，形式：HOST#PORT
; 详见dnsmasq手册的`--server`参数的说明
dnsmasq-dns = "127.0.0.1#5353"
; nftset
; 详见dnsmasq手册的`--nftset`参数的说明
dnsmasq-nftset = "4#inet#GFW#GFWLIST,6#inet#GFW#GFWLIST6"
; ipset
; 详见dnsmasq手册的`--ipset`参数的说明
dnsmasq-ipset = "GFWLIST,GFWLIST6"
output = ${DEST}/dnsmasq.conf

; v2ray: v2ray的规则配置文件
[job:v2ray]
; 代理的标签
v2ray-proxy-tag = proxy
; 直连的标签 未指定时将不出现直连的规则 默认: 空
v2ray-direct-tag = direct
; 输出格式 默认: json
; v2ray-format = json
output = ${DEST}/v2ray.json

; v2ray 输出yaml
[job:v2ray]
v2ray-proxy-tag = gfw
v2ray-direct-tag = direct
v2ray-format = yaml
output = ${DEST}/v2ray.yaml

; ssacl: shadowsocks的访问控制列表
[job:ssacl]
; ssacl-geocn = true
output = ${DEST}/ss.acl

; ip输出
[job:ip]
output = ${DEST}/ip-cn.txt
ip-cc = cn
ip-family = all
_order = 100

[job:ip]
output = ${DEST}/ipv6-us.txt
ip-cc = us
ip-family = 6
_order = 100

[job:quantumultx]
output = ${DEST}/quantumultx.conf

[job:surge]
output = ${DEST}/surge.conf

[job:wingy]
output = ${DEST}/wingy.yaml
; adapter选项
; wingy-adapter-opts =
; 匹配规则使用的adapter ID
; wingy-rule-adapter-id =
; 自定义模板文件
; template = /PATH/TO/WINGY/TEMPLATE/FILE
